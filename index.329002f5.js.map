{"mappings":"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","sources":["node_modules/rw_calculator_app/dist/Input.js","node_modules/rw_calculator_app/dist/Addition.js","node_modules/rw_calculator_app/dist/Subtraction.js","node_modules/rw_calculator_app/dist/Multiplication.js","node_modules/rw_calculator_app/dist/Division.js","src/main.js","node_modules/rw_calculator_app/dist/Calculator.js"],"sourcesContent":["export class Input {\n    constructor(value) {\n        this._valuePattern = /^-?\\d+\\.?\\d*$/;\n        this._digitPattern = /^\\d|\\.$/;\n        if (!this._valuePattern.test(value))\n            throw new Error(`This value is no valid input: ${value}`);\n        this._value = value.replace(/^0(?!\\.)(?=\\d)/g, '');\n    }\n    get value() {\n        return parseFloat(this._value);\n    }\n    get isEmpty() {\n        return this._value === '';\n    }\n    append(digit) {\n        if (!this._digitPattern.test(digit))\n            throw new Error(`This value is no valid input: ${digit}`);\n        if (digit === '.' && this._value.includes('.'))\n            return this;\n        return new Input(`${this._value}${digit}`);\n    }\n    toString() {\n        return this._value;\n    }\n}\n","export class Addition {\n    evaluate(inputA, inputB) {\n        return inputA + inputB;\n    }\n    toString() {\n        return \"+\";\n    }\n    get rank() {\n        return 1;\n    }\n}\n","export class Subtraction {\n    evaluate(inputA, inputB) {\n        return inputA - inputB;\n    }\n    toString() {\n        return \"-\";\n    }\n    get rank() {\n        return 1;\n    }\n}\n","export class Multiplication {\n    evaluate(inputA, inputB) {\n        return inputA * inputB;\n    }\n    toString() {\n        return \"*\";\n    }\n    get rank() {\n        return 0;\n    }\n}\n","export class Division {\n    evaluate(inputA, inputB) {\n        return inputA / inputB;\n    }\n    toString() {\n        return \"/\";\n    }\n    get rank() {\n        return 0;\n    }\n}\n","import {Addition, Calculator, Division, Input, Multiplication, Subtraction} from 'rw_calculator_app';\n\nconst calculatorInput = document.querySelector('#calculator-input');\nconst functionsContainer = document.querySelector('#functions');\nconst digitContainer = document.querySelector('#digits');\nconst operatorContainer = document.querySelector('#operators');\nconst digits = '7894561230.'.split('');\n\nfunction createButton(label, wrapper, action) {\n    const newButton = document.createElement('button');\n    newButton.className = 'digit';\n    newButton.type = 'button';\n    newButton.innerText = label;\n    newButton.setAttribute('data-input', label);\n    newButton.addEventListener('click', action);\n    wrapper.appendChild(newButton);\n\n    return newButton;\n}\n\nconst calc = new Calculator();\nlet input = new Input('0');\n\ndigits.forEach(digit => {\n    createButton(digit, digitContainer, event => {\n        if (calc.isLastItemInput())\n            return;\n        const value = event.target.dataset.input;\n\n        input = input.append(value);\n        calculatorInput.value = `${calc.expression} ${input}`\n    });\n});\n\ncreateButton('/', operatorContainer, () => {\n    calc.addInput(input);\n    calc.addOperation(new Division())\n\n    input = new Input('0');\n    calculatorInput.value = `${calc.expression} ${input}`\n});\n\ncreateButton('*', operatorContainer, () => {\n    calc.addInput(input);\n    calc.addOperation(new Multiplication())\n\n    input = new Input('0');\n    calculatorInput.value = `${calc.expression} ${input}`\n});\n\ncreateButton('-', operatorContainer, () => {\n    calc.addInput(input);\n    calc.addOperation(new Subtraction())\n\n    input = new Input('0');\n    calculatorInput.value = `${calc.expression} ${input}`\n});\n\ncreateButton('+', operatorContainer, () => {\n    calc.addInput(input);\n    calc.addOperation(new Addition())\n\n    input = new Input('0');\n    calculatorInput.value = `${calc.expression} ${input}`\n});\n\ncreateButton('=', digitContainer, () => {\n    calc.addInput(input);\n    const result = calc.evaluate();\n    input = new Input(result.toString());\n    calculatorInput.value = result;\n});\n\ncreateButton('AC', functionsContainer, () => {\n    calculatorInput.value = '';\n});\n\ncreateButton('C', functionsContainer, () => {\n    calculatorInput.value = calculatorInput.value.slice(0, -1);\n});\n","import { Input } from \"./Input\";\nexport class Calculator {\n    constructor() {\n        this._input = [];\n    }\n    get expression() {\n        return this._input.map((item) => item.toString()).join(\" \");\n    }\n    addInput(input) {\n        if (this.isLastItemInput())\n            return;\n        if (input.isEmpty)\n            return;\n        this._input.push(input);\n    }\n    addOperation(operation) {\n        if (!this.isLastItemInput())\n            return;\n        this._input.push(operation);\n    }\n    evaluate() {\n        const result = this.evaluateRecursive(this._input);\n        this._input.splice(0, this._input.length);\n        this._input.push(new Input(result.toString()));\n        return result;\n    }\n    evaluateRecursive(input) {\n        if (input.length === 1) {\n            const result = input[0];\n            return result.value;\n        }\n        const operation = input[1];\n        if (operation.rank === 1) {\n            const a = input[0];\n            const rest = input.filter((item, index) => index > 1);\n            return operation.evaluate(a.value, this.evaluateRecursive(rest));\n        }\n        const a = input[0];\n        const b = input[2];\n        const rest = input.filter((item, index) => index > 2);\n        return this.evaluateRecursive([new Input(operation.evaluate(a.value, b.value).toString()), ...rest]);\n    }\n    isLastItemInput() {\n        return this._input[this._input.length - 1] instanceof Input;\n    }\n}\n"],"names":["$1e3e815921fa7ae1$export$f5b8910cec6cf069","constructor","value","this","_valuePattern","_digitPattern","test","Error","_value","replace","parseFloat","isEmpty","append","digit","includes","toString","$64d2a2820da815b3$export$c8198ee0a7e41300","evaluate","inputA","inputB","rank","$a7f041641ad1b71c$export$3bdc3d5e5ad3524b","$1cd430c646388213$export$3207d171545ac994","$bca261c45f92c013$export$642e60965a9deb15","$2b6e161c9edcf319$var$calculatorInput","document","querySelector","$2b6e161c9edcf319$var$functionsContainer","$2b6e161c9edcf319$var$digitContainer","$2b6e161c9edcf319$var$operatorContainer","$2b6e161c9edcf319$var$digits","split","$2b6e161c9edcf319$var$createButton","label","wrapper","action","newButton","createElement","className","type","innerText","setAttribute","addEventListener","appendChild","$2b6e161c9edcf319$var$calc","_input","expression","map","item","join","addInput","input","isLastItemInput","push","addOperation","operation","result","evaluateRecursive","splice","length","a","rest","filter","index","a1","b","rest1","$2b6e161c9edcf319$var$input","forEach","event","target","dataset","slice"],"version":3,"file":"index.329002f5.js.map"}